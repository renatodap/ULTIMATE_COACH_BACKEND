-- WARNING: This schema is for context only and is not meant to be run.
-- Table order and constraints may not be valid for execution.

CREATE TABLE public.activities (
  id uuid NOT NULL DEFAULT uuid_generate_v4(),
  user_id uuid NOT NULL,
  name text NOT NULL,
  activity_type text NOT NULL,
  start_time timestamp with time zone NOT NULL,
  duration_minutes integer CHECK (duration_minutes > 0),
  distance_meters numeric,
  calories integer,
  average_heart_rate integer,
  max_heart_rate integer,
  perceived_exertion integer CHECK (perceived_exertion >= 1 AND perceived_exertion <= 10),
  notes text,
  exercises jsonb DEFAULT '[]'::jsonb,
  metrics jsonb DEFAULT '{}'::jsonb,
  source text DEFAULT 'manual'::text CHECK (source = ANY (ARRAY['manual'::text, 'ai_text'::text, 'ai_voice'::text, 'garmin'::text, 'strava'::text])),
  ai_confidence numeric CHECK (ai_confidence >= 0::numeric AND ai_confidence <= 1::numeric),
  ai_cost_usd numeric DEFAULT 0,
  created_at timestamp with time zone DEFAULT now(),
  updated_at timestamp with time zone DEFAULT now(),
  CONSTRAINT activities_pkey PRIMARY KEY (id),
  CONSTRAINT activities_user_id_fkey FOREIGN KEY (user_id) REFERENCES auth.users(id)
);
CREATE TABLE public.coach_conversations (
  id uuid NOT NULL DEFAULT uuid_generate_v4(),
  user_id uuid NOT NULL,
  title text,
  message_count integer DEFAULT 0 CHECK (message_count >= 0),
  archived boolean DEFAULT false,
  last_message_at timestamp with time zone DEFAULT now(),
  created_at timestamp with time zone DEFAULT now(),
  updated_at timestamp with time zone DEFAULT now(),
  CONSTRAINT coach_conversations_pkey PRIMARY KEY (id),
  CONSTRAINT coach_conversations_user_id_fkey FOREIGN KEY (user_id) REFERENCES auth.users(id)
);
CREATE TABLE public.coach_messages (
  id uuid NOT NULL DEFAULT uuid_generate_v4(),
  conversation_id uuid NOT NULL,
  user_id uuid NOT NULL,
  role text NOT NULL CHECK (role = ANY (ARRAY['user'::text, 'assistant'::text, 'system'::text])),
  content text NOT NULL,
  ai_provider text CHECK (ai_provider = ANY (ARRAY['anthropic'::text, 'groq'::text, 'openai'::text, 'deepseek'::text])),
  ai_model text,
  tokens_used integer DEFAULT 0,
  cost_usd numeric DEFAULT 0,
  context_used jsonb DEFAULT '{}'::jsonb,
  created_at timestamp with time zone DEFAULT now(),
  CONSTRAINT coach_messages_pkey PRIMARY KEY (id),
  CONSTRAINT coach_messages_conversation_id_fkey FOREIGN KEY (conversation_id) REFERENCES public.coach_conversations(id),
  CONSTRAINT coach_messages_user_id_fkey FOREIGN KEY (user_id) REFERENCES auth.users(id)
);
CREATE TABLE public.consultation_key_usage (
  id uuid NOT NULL DEFAULT uuid_generate_v4(),
  key_id uuid NOT NULL,
  user_id uuid NOT NULL,
  session_id uuid NOT NULL UNIQUE,
  used_at timestamp with time zone DEFAULT now(),
  ip_address inet,
  user_agent text,
  CONSTRAINT consultation_key_usage_pkey PRIMARY KEY (id),
  CONSTRAINT consultation_key_usage_key_id_fkey FOREIGN KEY (key_id) REFERENCES public.consultation_keys(id),
  CONSTRAINT consultation_key_usage_user_id_fkey FOREIGN KEY (user_id) REFERENCES auth.users(id),
  CONSTRAINT consultation_key_usage_session_id_fkey FOREIGN KEY (session_id) REFERENCES public.consultation_sessions(id)
);
CREATE TABLE public.consultation_keys (
  id uuid NOT NULL DEFAULT uuid_generate_v4(),
  key_code text NOT NULL UNIQUE,
  description text,
  max_uses integer NOT NULL DEFAULT 1 CHECK (max_uses >= 1),
  current_uses integer NOT NULL DEFAULT 0 CHECK (current_uses >= 0),
  expires_at timestamp with time zone,
  assigned_to_user_id uuid,
  is_active boolean DEFAULT true,
  created_by uuid,
  created_at timestamp with time zone DEFAULT now(),
  first_used_at timestamp with time zone,
  last_used_at timestamp with time zone,
  CONSTRAINT consultation_keys_pkey PRIMARY KEY (id),
  CONSTRAINT consultation_keys_assigned_to_user_id_fkey FOREIGN KEY (assigned_to_user_id) REFERENCES auth.users(id),
  CONSTRAINT consultation_keys_created_by_fkey FOREIGN KEY (created_by) REFERENCES auth.users(id)
);
CREATE TABLE public.consultation_messages (
  id uuid NOT NULL DEFAULT uuid_generate_v4(),
  session_id uuid NOT NULL,
  user_id uuid NOT NULL,
  role text NOT NULL CHECK (role = ANY (ARRAY['user'::text, 'assistant'::text, 'system'::text])),
  content text NOT NULL,
  ai_model text,
  tokens_used integer,
  cost_usd numeric,
  extracted_data jsonb DEFAULT '[]'::jsonb,
  tool_calls jsonb DEFAULT '[]'::jsonb,
  created_at timestamp with time zone DEFAULT now(),
  CONSTRAINT consultation_messages_pkey PRIMARY KEY (id),
  CONSTRAINT consultation_messages_session_id_fkey FOREIGN KEY (session_id) REFERENCES public.consultation_sessions(id),
  CONSTRAINT consultation_messages_user_id_fkey FOREIGN KEY (user_id) REFERENCES auth.users(id)
);
CREATE TABLE public.consultation_sessions (
  id uuid NOT NULL DEFAULT uuid_generate_v4(),
  user_id uuid NOT NULL,
  started_at timestamp with time zone DEFAULT now(),
  completed_at timestamp with time zone,
  current_section text CHECK (current_section = ANY (ARRAY['training_modalities'::text, 'exercise_familiarity'::text, 'training_schedule'::text, 'meal_timing'::text, 'typical_foods'::text, 'goals_events'::text, 'challenges'::text, 'review'::text])),
  progress_percentage integer DEFAULT 0 CHECK (progress_percentage >= 0 AND progress_percentage <= 100),
  time_spent_minutes integer DEFAULT 0,
  created_at timestamp with time zone DEFAULT now(),
  updated_at timestamp with time zone DEFAULT now(),
  CONSTRAINT consultation_sessions_pkey PRIMARY KEY (id),
  CONSTRAINT consultation_sessions_user_id_fkey FOREIGN KEY (user_id) REFERENCES auth.users(id)
);
CREATE TABLE public.event_types (
  id uuid NOT NULL DEFAULT uuid_generate_v4(),
  name text NOT NULL UNIQUE,
  category text CHECK (category = ANY (ARRAY['race'::text, 'competition'::text, 'sport_season'::text, 'personal_milestone'::text, 'aesthetic_goal'::text, 'health_goal'::text])),
  typical_duration_weeks integer,
  description text,
  display_order integer DEFAULT 0,
  created_at timestamp with time zone DEFAULT now(),
  CONSTRAINT event_types_pkey PRIMARY KEY (id)
);
CREATE TABLE public.exercises (
  id uuid NOT NULL DEFAULT uuid_generate_v4(),
  name text NOT NULL,
  description text,
  category text NOT NULL CHECK (category = ANY (ARRAY['compound_strength'::text, 'isolation_strength'::text, 'cardio_steady_state'::text, 'cardio_interval'::text, 'flexibility'::text, 'mobility'::text, 'sports_specific'::text, 'core'::text, 'plyometric'::text, 'olympic_lift'::text, 'bodyweight'::text, 'functional'::text])),
  primary_muscle_groups ARRAY DEFAULT '{}'::text[],
  secondary_muscle_groups ARRAY DEFAULT '{}'::text[],
  equipment_needed ARRAY DEFAULT '{}'::text[],
  equipment_optional ARRAY DEFAULT '{}'::text[],
  difficulty_level text CHECK (difficulty_level = ANY (ARRAY['beginner'::text, 'intermediate'::text, 'advanced'::text, 'expert'::text])),
  video_url text,
  thumbnail_url text,
  instructions text,
  common_mistakes text,
  primary_modalities ARRAY DEFAULT '{}'::text[],
  usage_count integer DEFAULT 0,
  is_public boolean DEFAULT true,
  verified boolean DEFAULT true,
  created_at timestamp with time zone DEFAULT now(),
  updated_at timestamp with time zone DEFAULT now(),
  CONSTRAINT exercises_pkey PRIMARY KEY (id)
);
CREATE TABLE public.food_servings (
  id uuid NOT NULL DEFAULT uuid_generate_v4(),
  food_id uuid NOT NULL,
  serving_size numeric NOT NULL CHECK (serving_size > 0::numeric),
  serving_unit text NOT NULL,
  serving_label text,
  grams_per_serving numeric NOT NULL CHECK (grams_per_serving > 0::numeric),
  is_default boolean DEFAULT false,
  display_order integer DEFAULT 0,
  created_at timestamp with time zone DEFAULT now(),
  CONSTRAINT food_servings_pkey PRIMARY KEY (id),
  CONSTRAINT food_servings_food_id_fkey FOREIGN KEY (food_id) REFERENCES public.foods(id)
);
CREATE TABLE public.foods (
  id uuid NOT NULL DEFAULT uuid_generate_v4(),
  name text NOT NULL,
  brand_name text,
  calories_per_100g numeric NOT NULL DEFAULT 0 CHECK (calories_per_100g >= 0::numeric),
  protein_g_per_100g numeric NOT NULL DEFAULT 0 CHECK (protein_g_per_100g >= 0::numeric),
  carbs_g_per_100g numeric NOT NULL DEFAULT 0 CHECK (carbs_g_per_100g >= 0::numeric),
  fat_g_per_100g numeric NOT NULL DEFAULT 0 CHECK (fat_g_per_100g >= 0::numeric),
  fiber_g_per_100g numeric DEFAULT 0,
  sugar_g_per_100g numeric DEFAULT 0,
  sodium_mg_per_100g numeric DEFAULT 0,
  food_type text CHECK (food_type = ANY (ARRAY['ingredient'::text, 'dish'::text, 'branded'::text, 'restaurant'::text])),
  dietary_flags ARRAY,
  is_public boolean DEFAULT true,
  verified boolean DEFAULT false,
  usage_count integer DEFAULT 0,
  created_by uuid,
  created_at timestamp with time zone DEFAULT now(),
  updated_at timestamp with time zone DEFAULT now(),
  CONSTRAINT foods_pkey PRIMARY KEY (id),
  CONSTRAINT foods_created_by_fkey FOREIGN KEY (created_by) REFERENCES auth.users(id)
);
CREATE TABLE public.meal_items (
  id uuid NOT NULL DEFAULT uuid_generate_v4(),
  meal_id uuid NOT NULL,
  food_id uuid NOT NULL,
  quantity numeric NOT NULL CHECK (quantity > 0::numeric),
  serving_id uuid,
  grams numeric NOT NULL CHECK (grams > 0::numeric),
  calories numeric NOT NULL DEFAULT 0,
  protein_g numeric NOT NULL DEFAULT 0,
  carbs_g numeric NOT NULL DEFAULT 0,
  fat_g numeric NOT NULL DEFAULT 0,
  display_unit text NOT NULL,
  display_label text,
  display_order integer DEFAULT 0,
  created_at timestamp with time zone DEFAULT now(),
  CONSTRAINT meal_items_pkey PRIMARY KEY (id),
  CONSTRAINT meal_items_meal_id_fkey FOREIGN KEY (meal_id) REFERENCES public.meals(id),
  CONSTRAINT meal_items_food_id_fkey FOREIGN KEY (food_id) REFERENCES public.foods(id),
  CONSTRAINT meal_items_serving_id_fkey FOREIGN KEY (serving_id) REFERENCES public.food_servings(id)
);
CREATE TABLE public.meal_times (
  id uuid NOT NULL DEFAULT uuid_generate_v4(),
  time_of_day text NOT NULL UNIQUE CHECK (time_of_day = ANY (ARRAY['early_morning'::text, 'breakfast'::text, 'mid_morning'::text, 'lunch'::text, 'afternoon'::text, 'pre_workout'::text, 'post_workout'::text, 'dinner'::text, 'evening'::text, 'late_night'::text])),
  label text NOT NULL,
  typical_hour integer CHECK (typical_hour >= 0 AND typical_hour <= 23),
  description text,
  display_order integer DEFAULT 0,
  created_at timestamp with time zone DEFAULT now(),
  CONSTRAINT meal_times_pkey PRIMARY KEY (id)
);
CREATE TABLE public.meals (
  id uuid NOT NULL DEFAULT uuid_generate_v4(),
  user_id uuid NOT NULL,
  name text,
  meal_type text NOT NULL CHECK (meal_type = ANY (ARRAY['breakfast'::text, 'lunch'::text, 'dinner'::text, 'snack'::text, 'other'::text])),
  logged_at timestamp with time zone NOT NULL DEFAULT now(),
  notes text,
  total_calories numeric DEFAULT 0,
  total_protein_g numeric DEFAULT 0,
  total_carbs_g numeric DEFAULT 0,
  total_fat_g numeric DEFAULT 0,
  source text DEFAULT 'manual'::text CHECK (source = ANY (ARRAY['manual'::text, 'ai_text'::text, 'ai_voice'::text, 'ai_photo'::text, 'coach_chat'::text])),
  ai_confidence numeric CHECK (ai_confidence >= 0::numeric AND ai_confidence <= 1::numeric),
  ai_cost_usd numeric DEFAULT 0,
  created_at timestamp with time zone DEFAULT now(),
  updated_at timestamp with time zone DEFAULT now(),
  CONSTRAINT meals_pkey PRIMARY KEY (id),
  CONSTRAINT meals_user_id_fkey FOREIGN KEY (user_id) REFERENCES auth.users(id)
);
CREATE TABLE public.profiles (
  id uuid NOT NULL,
  full_name text,
  avatar_url text,
  primary_goal text CHECK (primary_goal = ANY (ARRAY['lose_weight'::text, 'build_muscle'::text, 'maintain'::text, 'improve_performance'::text])),
  experience_level text DEFAULT 'beginner'::text CHECK (experience_level = ANY (ARRAY['beginner'::text, 'intermediate'::text, 'advanced'::text])),
  estimated_tdee integer CHECK (estimated_tdee >= 1000 AND estimated_tdee <= 10000),
  daily_calorie_goal integer CHECK (daily_calorie_goal >= 1000 AND daily_calorie_goal <= 10000),
  daily_protein_goal integer CHECK (daily_protein_goal >= 50 AND daily_protein_goal <= 500),
  daily_carbs_goal integer CHECK (daily_carbs_goal >= 50 AND daily_carbs_goal <= 800),
  daily_fat_goal integer CHECK (daily_fat_goal >= 20 AND daily_fat_goal <= 300),
  onboarding_completed boolean DEFAULT false,
  onboarding_completed_at timestamp with time zone,
  unit_system text DEFAULT 'imperial'::text CHECK (unit_system = ANY (ARRAY['metric'::text, 'imperial'::text])),
  timezone text DEFAULT 'America/New_York'::text,
  created_at timestamp with time zone DEFAULT now(),
  updated_at timestamp with time zone DEFAULT now(),
  age integer CHECK (age >= 13 AND age <= 120),
  biological_sex text CHECK (biological_sex = ANY (ARRAY['male'::text, 'female'::text])),
  height_cm numeric CHECK (height_cm >= 100::numeric AND height_cm <= 300::numeric),
  current_weight_kg numeric CHECK (current_weight_kg >= 30::numeric AND current_weight_kg <= 300::numeric),
  goal_weight_kg numeric,
  activity_level text CHECK (activity_level = ANY (ARRAY['sedentary'::text, 'lightly_active'::text, 'moderately_active'::text, 'very_active'::text, 'extremely_active'::text])),
  workout_frequency integer CHECK (workout_frequency >= 0 AND workout_frequency <= 7),
  sleep_hours numeric CHECK (sleep_hours >= 4::numeric AND sleep_hours <= 12::numeric),
  stress_level text DEFAULT 'medium'::text CHECK (stress_level = ANY (ARRAY['low'::text, 'medium'::text, 'high'::text])),
  dietary_preference text DEFAULT 'none'::text CHECK (dietary_preference = ANY (ARRAY['none'::text, 'vegetarian'::text, 'vegan'::text, 'pescatarian'::text, 'keto'::text, 'paleo'::text])),
  food_allergies ARRAY DEFAULT '{}'::text[],
  foods_to_avoid ARRAY DEFAULT '{}'::text[],
  meals_per_day integer DEFAULT 3 CHECK (meals_per_day >= 1 AND meals_per_day <= 8),
  cooks_regularly boolean DEFAULT true,
  macros_last_calculated_at timestamp with time zone,
  macros_calculation_reason text,
  consultation_completed boolean DEFAULT false,
  consultation_completed_at timestamp with time zone,
  CONSTRAINT profiles_pkey PRIMARY KEY (id),
  CONSTRAINT profiles_id_fkey FOREIGN KEY (id) REFERENCES auth.users(id)
);
CREATE TABLE public.training_modalities (
  id uuid NOT NULL DEFAULT uuid_generate_v4(),
  name text NOT NULL UNIQUE,
  description text,
  typical_frequency_per_week integer CHECK (typical_frequency_per_week >= 1 AND typical_frequency_per_week <= 7),
  equipment_required ARRAY DEFAULT '{}'::text[],
  icon text,
  display_order integer DEFAULT 0,
  created_at timestamp with time zone DEFAULT now(),
  CONSTRAINT training_modalities_pkey PRIMARY KEY (id)
);
CREATE TABLE public.user_difficulties (
  id uuid NOT NULL DEFAULT uuid_generate_v4(),
  user_id uuid NOT NULL,
  difficulty_category text NOT NULL CHECK (difficulty_category = ANY (ARRAY['motivation'::text, 'time_management'::text, 'injury'::text, 'nutrition'::text, 'knowledge'::text, 'consistency'::text, 'energy'::text, 'social_support'::text, 'equipment_access'::text, 'travel'::text, 'other'::text])),
  description text NOT NULL,
  severity integer DEFAULT 3 CHECK (severity >= 1 AND severity <= 5),
  frequency text CHECK (frequency = ANY (ARRAY['daily'::text, 'weekly'::text, 'monthly'::text, 'occasionally'::text])),
  triggers ARRAY,
  attempted_solutions ARRAY,
  what_worked text,
  what_didnt_work text,
  created_at timestamp with time zone DEFAULT now(),
  CONSTRAINT user_difficulties_pkey PRIMARY KEY (id),
  CONSTRAINT user_difficulties_user_id_fkey FOREIGN KEY (user_id) REFERENCES auth.users(id)
);
CREATE TABLE public.user_familiar_exercises (
  id uuid NOT NULL DEFAULT uuid_generate_v4(),
  user_id uuid NOT NULL,
  exercise_id uuid NOT NULL,
  comfort_level integer CHECK (comfort_level >= 1 AND comfort_level <= 5),
  last_performed_date date,
  frequency text CHECK (frequency = ANY (ARRAY['never_done'::text, 'rarely'::text, 'occasionally'::text, 'regularly'::text, 'frequently'::text])),
  typical_weight_kg numeric,
  typical_reps integer,
  typical_duration_minutes integer,
  enjoys_it boolean,
  willing_to_do boolean DEFAULT true,
  notes text,
  created_at timestamp with time zone DEFAULT now(),
  updated_at timestamp with time zone DEFAULT now(),
  CONSTRAINT user_familiar_exercises_pkey PRIMARY KEY (id),
  CONSTRAINT user_familiar_exercises_user_id_fkey FOREIGN KEY (user_id) REFERENCES auth.users(id),
  CONSTRAINT user_familiar_exercises_exercise_id_fkey FOREIGN KEY (exercise_id) REFERENCES public.exercises(id)
);
CREATE TABLE public.user_improvement_goals (
  id uuid NOT NULL DEFAULT uuid_generate_v4(),
  user_id uuid NOT NULL,
  goal_type text NOT NULL CHECK (goal_type = ANY (ARRAY['strength'::text, 'endurance'::text, 'skill'::text, 'aesthetic'::text, 'body_composition'::text, 'mobility'::text, 'performance'::text, 'health'::text])),
  target_description text NOT NULL,
  measurement_metric text,
  current_value numeric,
  target_value numeric,
  target_date date,
  priority integer DEFAULT 3 CHECK (priority >= 1 AND priority <= 5),
  exercise_id uuid,
  notes text,
  created_at timestamp with time zone DEFAULT now(),
  updated_at timestamp with time zone DEFAULT now(),
  CONSTRAINT user_improvement_goals_pkey PRIMARY KEY (id),
  CONSTRAINT user_improvement_goals_user_id_fkey FOREIGN KEY (user_id) REFERENCES auth.users(id),
  CONSTRAINT user_improvement_goals_exercise_id_fkey FOREIGN KEY (exercise_id) REFERENCES public.exercises(id)
);
CREATE TABLE public.user_non_negotiables (
  id uuid NOT NULL DEFAULT uuid_generate_v4(),
  user_id uuid NOT NULL,
  constraint_type text NOT NULL CHECK (constraint_type = ANY (ARRAY['rest_days'::text, 'meal_timing'::text, 'equipment'::text, 'exercises_excluded'::text, 'foods_excluded'::text, 'time_blocks'::text, 'social'::text, 'religious'::text, 'medical'::text, 'other'::text])),
  description text NOT NULL,
  reason text,
  excluded_exercise_ids ARRAY,
  excluded_food_ids ARRAY,
  is_permanent boolean DEFAULT true,
  end_date date,
  created_at timestamp with time zone DEFAULT now(),
  CONSTRAINT user_non_negotiables_pkey PRIMARY KEY (id),
  CONSTRAINT user_non_negotiables_user_id_fkey FOREIGN KEY (user_id) REFERENCES auth.users(id)
);
CREATE TABLE public.user_preferred_meal_times (
  id uuid NOT NULL DEFAULT uuid_generate_v4(),
  user_id uuid NOT NULL,
  meal_time_id uuid NOT NULL,
  typical_portion_size text CHECK (typical_portion_size = ANY (ARRAY['small'::text, 'medium'::text, 'large'::text])),
  flexibility_minutes integer DEFAULT 30,
  is_non_negotiable boolean DEFAULT false,
  notes text,
  created_at timestamp with time zone DEFAULT now(),
  CONSTRAINT user_preferred_meal_times_pkey PRIMARY KEY (id),
  CONSTRAINT user_preferred_meal_times_user_id_fkey FOREIGN KEY (user_id) REFERENCES auth.users(id),
  CONSTRAINT user_preferred_meal_times_meal_time_id_fkey FOREIGN KEY (meal_time_id) REFERENCES public.meal_times(id)
);
CREATE TABLE public.user_training_availability (
  id uuid NOT NULL DEFAULT uuid_generate_v4(),
  user_id uuid NOT NULL,
  day_of_week integer NOT NULL CHECK (day_of_week >= 1 AND day_of_week <= 7),
  time_of_day text NOT NULL CHECK (time_of_day = ANY (ARRAY['early_morning'::text, 'morning'::text, 'midday'::text, 'afternoon'::text, 'evening'::text, 'night'::text])),
  typical_duration_minutes integer CHECK (typical_duration_minutes >= 15 AND typical_duration_minutes <= 240),
  min_duration_minutes integer,
  max_duration_minutes integer,
  location_type text CHECK (location_type = ANY (ARRAY['home'::text, 'gym'::text, 'outdoor'::text, 'office'::text, 'flexible'::text])),
  is_flexible boolean DEFAULT true,
  is_preferred boolean DEFAULT false,
  notes text,
  created_at timestamp with time zone DEFAULT now(),
  CONSTRAINT user_training_availability_pkey PRIMARY KEY (id),
  CONSTRAINT user_training_availability_user_id_fkey FOREIGN KEY (user_id) REFERENCES auth.users(id)
);
CREATE TABLE public.user_training_modalities (
  id uuid NOT NULL DEFAULT uuid_generate_v4(),
  user_id uuid NOT NULL,
  modality_id uuid NOT NULL,
  is_primary boolean DEFAULT false,
  proficiency_level text CHECK (proficiency_level = ANY (ARRAY['beginner'::text, 'intermediate'::text, 'advanced'::text, 'expert'::text])),
  years_experience integer CHECK (years_experience >= 0 AND years_experience <= 50),
  enjoys_it boolean,
  willing_to_continue boolean DEFAULT true,
  created_at timestamp with time zone DEFAULT now(),
  CONSTRAINT user_training_modalities_pkey PRIMARY KEY (id),
  CONSTRAINT user_training_modalities_user_id_fkey FOREIGN KEY (user_id) REFERENCES auth.users(id),
  CONSTRAINT user_training_modalities_modality_id_fkey FOREIGN KEY (modality_id) REFERENCES public.training_modalities(id)
);
CREATE TABLE public.user_typical_meal_foods (
  id uuid NOT NULL DEFAULT uuid_generate_v4(),
  user_id uuid NOT NULL,
  food_id uuid NOT NULL,
  meal_time_id uuid,
  frequency text NOT NULL CHECK (frequency = ANY (ARRAY['daily'::text, 'several_times_week'::text, 'weekly'::text, 'occasionally'::text])),
  typical_quantity_grams numeric,
  typical_serving_id uuid,
  enjoys_it boolean DEFAULT true,
  willing_to_continue boolean DEFAULT true,
  created_at timestamp with time zone DEFAULT now(),
  CONSTRAINT user_typical_meal_foods_pkey PRIMARY KEY (id),
  CONSTRAINT user_typical_meal_foods_user_id_fkey FOREIGN KEY (user_id) REFERENCES auth.users(id),
  CONSTRAINT user_typical_meal_foods_food_id_fkey FOREIGN KEY (food_id) REFERENCES public.foods(id),
  CONSTRAINT user_typical_meal_foods_meal_time_id_fkey FOREIGN KEY (meal_time_id) REFERENCES public.meal_times(id),
  CONSTRAINT user_typical_meal_foods_typical_serving_id_fkey FOREIGN KEY (typical_serving_id) REFERENCES public.food_servings(id)
);
CREATE TABLE public.user_upcoming_events (
  id uuid NOT NULL DEFAULT uuid_generate_v4(),
  user_id uuid NOT NULL,
  event_type_id uuid,
  event_name text NOT NULL,
  event_date date,
  priority integer DEFAULT 3 CHECK (priority >= 1 AND priority <= 5),
  specific_goals ARRAY,
  notes text,
  is_completed boolean DEFAULT false,
  created_at timestamp with time zone DEFAULT now(),
  updated_at timestamp with time zone DEFAULT now(),
  CONSTRAINT user_upcoming_events_pkey PRIMARY KEY (id),
  CONSTRAINT user_upcoming_events_user_id_fkey FOREIGN KEY (user_id) REFERENCES auth.users(id),
  CONSTRAINT user_upcoming_events_event_type_id_fkey FOREIGN KEY (event_type_id) REFERENCES public.event_types(id)
);