[pytest]
# Pytest configuration for modern 2025 testing standards

# Test discovery patterns
python_files = test_*.py
python_classes = Test*
python_functions = test_*

# Directories to search for tests
testpaths = tests

# Markers for test categorization
markers =
    unit: Unit tests - fast, isolated, no external dependencies
    integration: Integration tests - API, database, service interactions
    e2e: End-to-end tests - complete user workflows
    slow: Tests that take > 5 seconds to run
    contract: API contract tests
    performance: Performance and load tests
    database: Tests requiring real database
    auth: Authentication/authorization tests
    activities: Activity tracking tests
    meals: Meal logging tests
    consultation: AI consultation tests

# Asyncio configuration
asyncio_mode = auto

# Coverage configuration
[coverage:run]
source = app
omit =
    */tests/*
    */migrations/*
    */__pycache__/*
    */venv/*
    */env/*
    app/config.py

[coverage:report]
# Unit tests should have high coverage (80-90%)
# Integration/E2E tests don't need coverage metrics (behavioral validation)
fail_under = 70
show_missing = True
skip_covered = False
skip_empty = True

exclude_lines =
    # Don't complain about missing coverage on these lines
    pragma: no cover
    def __repr__
    raise AssertionError
    raise NotImplementedError
    if __name__ == .__main__.:
    if TYPE_CHECKING:
    @abstractmethod
    @abc.abstractmethod

[coverage:html]
directory = htmlcov

# Output styling
console_output_style = progress
log_cli = True
log_cli_level = INFO
log_cli_format = %(asctime)s [%(levelname)8s] %(message)s
log_cli_date_format = %Y-%m-%d %H:%M:%S

# Strict mode (catch common mistakes)
addopts =
    # Show summary of all test types
    -ra
    # Show extra test summary info
    --strict-markers
    # Show warnings
    -W default
    # Verbose failure output
    --tb=short
    # Show local variables in tracebacks
    --showlocals
    # Parallel execution (comment out if debugging)
    # -n auto

# Minimum Python version
minversion = 3.12

# Test execution order (for CI optimization)
# Run fast unit tests first, then integration, then E2E
